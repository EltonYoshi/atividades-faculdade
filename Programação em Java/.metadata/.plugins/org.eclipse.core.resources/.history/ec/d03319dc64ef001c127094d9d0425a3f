package app;

import java.util.Scanner;
public class MenuOpcaoController {
	private Scanner sc;
	private FuncaoCadastroEventoPublico cadastroEvento;
	private FuncaoCadastroEventoPrivado cadastroEventoPrivado;
	private FuncaoCadastroUsuario cadastroUsuario;
		
	//Construtor
	public MenuOpcaoController() {
		this.sc = new Scanner(System.in);
		this.cadastroEvento = new FuncaoCadastroEventoPublico();
		this.cadastroUsuario = new FuncaoCadastroUsuario();
		this.cadastroEventoPrivado = new FuncaoCadastroEventoPrivado();
	}
	
	
	
	public void efetuaEscolha(int escolha) {
		switch(escolha){
		case 1:
			cadastroUsuario.telaCadastroDoUsuario();
			
			
			break;
		case 2:
			Scanner sc2 = new Scanner(System.in);
			double op = 0;
			do {
				op = 0;
				System.out.println("Qual categoria de evento você deseja?");
				System.out.println("1 - Público");
				System.out.println("0 - Privado");
				System.out.println("Escolha:");
				op = Integer.parseInt(sc2.nextLine());
				
			}while(op < 0 || op > 1 );
			
			
			if(op == 1) {
				
				cadastroEvento.telaCadastroDoEvento();
			} else if(op == 0) {
				
				System.out.println("nome");
				cadastroEventoPrivado.telaCadastroDoEvento();
				int esc = 0;
				do {
					esc = 0;
					cadastroEventoPrivado.cadastrarConvidado(cadastroUsuario.getArmazenamentoDoUsuario(), 
							cadastroEventoPrivado.getArmazenamentoDeEventos());
					System.out.println("Deseja convidar outro usuário?");
					System.out.println("1 - Sim");
					System.out.println("0 - Não");
					System.out.println("Escolha: \n");
					esc = Integer.parseInt(sc2.nextLine());
				}while(esc == 1);
				
			}
			
			
			break;
		case 3:
			FuncaoParticiparEvento participarEvento = new FuncaoParticiparEvento(cadastroEvento.getArmazenamentoDeEventos(),
					cadastroUsuario.getArmazenamentoDoUsuario());
			
			participarEvento.mostrarEventos();
			participarEvento.escolherEvento();
			break;
		case 4:
			FuncaoEventosDoUsuario eventosDoUsuario = new FuncaoEventosDoUsuario(cadastroEvento.getArmazenamentoDeEventos());
			
			eventosDoUsuario.mostrarEventosDoUsuario();
			eventosDoUsuario.cancelarParticipacao();
			break;
		case 5:
			System.out.println(cadastroEvento.getArmazenamentoDeEventos().getArmazenamento());
			break;
		case 6:
			FuncaoEventosDoDia eventosDoDia = new FuncaoEventosDoDia(cadastroEvento.getArmazenamentoDeEventos());
			
			eventosDoDia.eventosOcorridos();
			eventosDoDia.eventosAcontecendoAgora();
			
			break;
		case 7:
			
			System.out.println(cadastroEventoPrivado.getArmazenamentoDeEventos().getArmazenamento());
			break;
		default:
			System.out.println("ERRO");
			break;
		}
		
	}


}
